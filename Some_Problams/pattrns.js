/*----------------------------------------------------------------------------- *
                                                                               ***
                                                                              *****
                                                                             *******
                                                                            **********-------------------------------------------------------------------------------------  */ 

let n=5
for(i=1;i<=n;i++){
  let line=''
  for(j=1;j<=n-i;j++){
    line+=' '
  }
  for(k=1;k<=(2*i-1);k++){
    line+='*'
  }
  console.log(line)
}
/**--------------------------------------- */
let n=5;
for(i=1;i<=n;i++){
  let line='';
  for(j=1;j<=i;j++){
    line += '*';
  }
  let space=2*(n-i)
  for(k=1;k<=space;k++){
    line +=' '
  }
  for(j=1;j<=i;j++){
    line +='*'
  }
  // console.log(space)
  console.log(line)
}
for(i=n;i>0;i--){
  let line='';
  for(j=1;j<=i;j++){
    line += '*';
  }
  let space=2*(n-i)
  for(k=1;k<=space;k++){
    line +=' '
  }
  for(j=1;j<=i;j++){
    line +='*'
  }
  // console.log(space)
  console.log(line)
}
/**------------------------------------------------------------------------------------------------------------------------------------------------------- */

/**1. Right-Angled Triangle Pattern**/

let n = 5; // Number of rows
for (let i = 1; i <= n; i++) {
  let row = "";
  for (let j = 1; j <= i; j++) {
    row += "* ";
  }
  console.log(row);
}


/**Output:**

* 
* * 
* * * 
* * * * 
* * * * *
*/
/**-------------------------------------------------------------------------------------------------------------------------------------------------------
/**2. Inverted Triangle Pattern**/

let n = 5; // Number of rows
for (let i = n; i >= 1; i--) {
  let row = "";
  for (let j = 1; j <= i; j++) {
    row += "* ";
  }
  console.log(row);
}


/**Output:**
```
* * * * * 
* * * * 
* * * 
* * 
*
*/
/**-------------------------------------------------------------------------------------------------------------------------------------------------------
/**3. Pyramid Pattern**/

let n = 5; // Number of rows
for (let i = 1; i <= n; i++) {
  let row = "";
  for (let j = 1; j <= n - i; j++) {
    row += " "; // Print spaces
  }
  for (let k = 1; k <= 2 * i - 1; k++) {
    row += "*"; // Print stars
  }
  console.log(row);
}


/**Output:**

    *
   ***
  *****
 *******
*********
*/

/**-------------------------------------------------------------------------------------------------------------------------------------------------------
/* **4. Diamond Pattern**/

let n = 5; // Number of rows for top half
// Top half of diamond
for (let i = 1; i <= n; i++) {
  let row = "";
  for (let j = 1; j <= n - i; j++) {
    row += " ";
  }
  for (let k = 1; k <= 2 * i - 1; k++) {
    row += "*";
  }
  console.log(row);
}
// Bottom half of diamond
for (let i = n - 1; i >= 1; i--) {
  let row = "";
  for (let j = 1; j <= n - i; j++) {
    row += " ";
  }
  for (let k = 1; k <= 2 * i - 1; k++) {
    row += "*";
  }
  console.log(row);
}


/**Output:**

    *
   ***
  *****
 *******
*********
 *******
  *****
   ***
    *
*/
/**-------------------------------------------------------------------------------------------------------------------------------------------------------
/*5. Number Triangle Pattern**-----------------------------------*/

let n = 5;
for (let i = 1; i <= n; i++) {
  let row = "";
  for (let j = 1; j <= i; j++) {
    row += j + " ";
  }
  console.log(row);
}


/**Output:**

1 
1 2 
1 2 3 
1 2 3 4 
1 2 3 4 5
*/
/**-------------------------------------------------------------------------------------------------------------------------------------------------------
/* **6. Floyd's Triangle Pattern**/
let n = 5;
let num = 1;
for (let i = 1; i <= n; i++) {
  let row = "";
  for (let j = 1; j <= i; j++) {
    row += num + " ";
    num++;
  }
  console.log(row);
}


/**Output:**
1 
2 3 
4 5 6 
7 8 9 10 
11 12 13 14 15

*/

/*------------------------------------------------7. Hollow Square Pattern---------------------------------------------------- */

let n = 5; // Number of rows and columns
for (let i = 1; i <= n; i++) {
  let row = "";
  for (let j = 1; j <= n; j++) {
    if (i === 1 || i === n || j === 1 || j === n) {
      row += "* ";
    } else {
      row += "  ";
    }
  }
  console.log(row);
}


/*----------------------------------**Output:**--------------------------------------
* * * * *
*       *
*       *
*       *
* * * * *

*/
